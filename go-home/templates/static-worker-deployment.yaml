{{- $rootNode := . }}
{{- $root := $rootNode.Values }}
{{- range $index, $worker := .Values.static }}

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: {{ template "go-home.worker.static.name" $rootNode }}-{{ $index }}
  namespace: {{ $root.general.namespace }}
  labels: 
    app: {{ template "go-home.worker.static.name" $rootNode }}
    chart: "{{ $rootNode.Chart.Name }}-{{ $rootNode.Chart.Version }}"
    release: {{ $rootNode.Release.Name | quote }}
    worker: static-{{ $index }}
spec: 
  replicas: 1
  template:
    metadata: 
      labels:
        app: {{ template "go-home.worker.static.name" $rootNode }}
        release: {{ $rootNode.Release.Name }}
        worker: static-{{ $index }}
    spec: 
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
{{- if $root.general.rbacEnabled }}
      serviceAccountName: {{ template "go-home.name" $rootNode }}
{{- end }}
      nodeSelector:
        {{- range $key, $val := $worker.nodeSelector }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
      volumes: 
        - name: plugins
          persistentVolumeClaim:
            claimName: {{ template "go-home.name" $rootNode }}
        - name: config
          configMap: 
            name: {{ template "go-home.worker.static.name" $rootNode }}
{{- if $worker.mountDevices }}
        - name: dev
          hostPath: 
            path: /dev
{{- end }}
      containers: 
        - name: {{ template "go-home.worker.static.name" $rootNode }}-{{ $index }}
          image: {{ $root.docker.image }}:{{ $root.docker.tag }}
          imagePullPolicy: {{ $root.docker.pullPolicy }}
{{- if $worker.mountDevices }}
          securityContext:
            privileged: true
{{- end }}
          resources: 
            requests: 
              cpu: {{ $root.resources.cpu.requests | quote }}
              memory: {{ $root.resources.memory.requests | quote }}
            limits: 
              cpu: {{ $root.resources.cpu.limits | quote }}
              memory: {{ $root.resources.memory.limits | quote }}
          ports:
          {{- range $worker.ports }}
            - containerPort: {{ . }}
              hostPort: {{ . }}
              protocol: TCP
          {{- end }}
          volumeMounts: 
            - name: plugins
              mountPath: /plugins
            - name: config
              mountPath: /config
{{- if $worker.mountDevices }}
            - name: dev
              mountPath: /dev
{{- end }}
          command: 
            - /bin/sh
          args:
            - "-c"
            - |
              mkdir -p $HOME_DIR/configs && \
              cp -f /config/config-{{ $index }}.yaml $HOME_DIR/configs/ && \
              cd $HOME_DIR && \
              ./go-home -w \
              -c location:$HOME_DIR/configs \
              -s provider:k8s \
              -s secret:{{ $root.general.namespace }}/{{ template "go-home.name" $rootNode }} \
              {{- if $root.bintrayProxy.enabled }}
              --plugins=/plugins \
              --pluginsProxy={{ $root.bintrayProxy.url }}
              {{- else }}
              --plugins=/plugins
              {{- end }}

---

{{- end }}